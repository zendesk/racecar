version: '2.1'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
    healthcheck:
      test: echo ruok | nc 127.0.0.1 2181 | grep imok

  broker:
    image: confluentinc/cp-kafka:5.5.1
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
    healthcheck:
      test: nc -z 127.0.0.1 9092

  wait-for-healthy-services:
    image: alpine
    depends_on:
      broker:
        condition: service_healthy
      zookeeper:
        condition: service_healthy


  # If you want to run the tests locally with Docker, comment in the tests service.
  # The behaviour, especially of the integration tests, can differ somewhat compared
  # to running it on your machine.

  # tests:
  #   build:
  #     context: .
  #   depends_on:
  #     wait-for-healthy-services:
  #       condition: service_started
  #   environment:
  #     RACECAR_BROKERS: broker:29092
  #     DOCKER_SUDO: 'true'
  #   # When bringing up the stack, we just let the container exit. For running the
  #   # specs, we'll use commands like `docker-compose run tests rspec`
  #   command: ["echo", "ready"]
  #   volumes:
  #     # The line below allows us to run docker commands from the container itself
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #     - .:/app
